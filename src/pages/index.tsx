import { SignInButton } from "@clerk/nextjs";
import { useUser } from "@clerk/clerk-react";
import Head from "next/head";
import { type RouterOutputs, api } from "~/utils/api";
import { LoadingPage  } from "~/components/loading";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { TRPCError } from "@trpc/server";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <Image
        src={user.profileImageUrl}
        alt="profile image"
        className="rounded-full "
        width={56}
        height={56} 
      />
      <input
        placeholder="Type Emoji's here!"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <Image
        src={author.profileImageUrl}
        alt={`@${author.username} prfile picture∏`}
        className="rounded-full"
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="text-slate-300gap-1 flex">
          <span>{`@${author.username}`}</span>
          <span className="font-thin">{`  - ${dayjs(
            post.createdAt,
          ).fromNow()}`}</span>
        </div>
        <span className="text-2xl ">{post.content}</span>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postLoading  } = api.posts.getAll.useQuery();

  if (postLoading) return <LoadingPage />;

  if (!data) throw new TRPCError({ code: "INTERNAL_SERVER_ERROR", message: "No data"  });

  return (
    <div className="flex flex-col ">
            {[...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>  
  );
}
 
export default function Home() {
  const {  isLoaded: userLoaded, isSignedIn } = useUser();

  // Start fetching posts here asap 
  api.posts.getAll.useQuery();


  if(!userLoaded) return <div /> ;  

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="zborder-b flex border-slate-400 p-4">
            {! isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {isSignedIn && <CreatePostWizard />}
          </div>

        <Feed /> 
        </div>
      </main>
    </>
  );
}
